{"version":3,"sources":["Redux/slices/auth.js","Redux/slices/player.js","Redux/slices/history.js","Redux/slices/formLogin.js","Redux/slices/index.js","Redux/index.js","Api/axiosClient.js","Api/auth.js","Api/song.js","Utilities/theme.js","Components/StyledPage/StyledHomePage.js","Components/StyledPage/StyledSearchResultPage.js","Utilities/validations.js","Utilities/convertSongInfo.js","Components/StyledPage/StyledAccountPage.js","Utilities/sleep.js","Components/StyledComponent/StyledButton.js","Components/StyledComponent/StyledFormControl.js","Components/StyledComponent/StyledBackground.js","Components/StyledComponent/StyledFormModule.js","Components/SideBarComponent/index.jsx","Components/HeaderComponent/index.jsx","Components/InputComponent/index.jsx","Components/FormLoginComponent/index.jsx","Components/FormRegisterComponent/index.jsx","Components/LoadingOverLay/index.jsx","Constant/FormLogin.js","Components/SearchResultBox/index.jsx","Components/SongItemComponent/index.jsx","Components/SideBarItemComponent/index.jsx","Modules/LoginModule/index.jsx","Modules/RegisterModule/index.jsx","Components/LoginModalComponent/index.jsx","Routes/index.js","Components/FooterComponent/index.jsx","Components/SearchResultItem/index.jsx","Components/AddMenuComponent/index.jsx","Components/AvatarComponent/index.jsx","Components/LoadingComponent/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["login","createAsyncThunk","body","a","rejectWithValue","authApi","res","data","register","getInfo","auth","createSlice","name","initialState","accessToken","userInfo","isLoading","reducers","logout","state","extraReducers","builder","addCase","fulfilled","action","payload","meta","token","pending","rejected","authSelector","actions","player","require","playlist","currentSong","isPlaying","isClosed","listPlayedSongs","concatPlaylist","forEach","song","some","item","musicSrc","push","toast","success","replacePlaylist","play","pause","refreshPlaylist","closePlayer","openPlayer","addPlayedSong","updateCurrentSong","playerSelector","history","recently","updateHistory","songIndex","findIndex","splice","unshift","slice","formLogin","isShowFormLogin","showFormLogin","hiddenFormLogin","formLoginSelector","rootReducer","combineReducers","authReducer","playerReducer","historyReducer","formLoginReducer","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","thunk","persistor","persistStore","queryString","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","stringify","interceptors","request","use","config","getState","Authorization","response","error","status","dispatch","post","get","updateInfo","patch","songApi","slug","url","theme","styled","div","colors","main","secondary","purple","orange","gray","gray_1","gray_2","gray_3","gray_4","gray_5","gray_6","black","bgBtn","breakPoints","breakSmall","breakMobile","breakMobileMedium","breakTablet","breakOnlyMobile","breakMedium","breakIpadPro","breakLarge","breakBig","breakpoint","css","loginSchema","yup","shape","email","required","password","registerSchema","confirmPassword","oneOf","convertSongInfo","songInfo","fileUrl","cover","thumbUrl","singer","lyric","lyrics","StyledButton","button","p","StyledUpdateButton","disabled","StyledFormControl","motion","isBlur","width","isFocused","InputComponent","label","value","type","touched","onChange","onBlur","StyledTextField","TextField","fullWidth","helperText","variant","autoComplete","FormLoginComponent","values","errors","onSubmit","isSubmitting","className","Container","form","FormRegisterComponent","LoadingOverLay","color","FORM_LOGIN","LoginModule","onHiddenLogin","useDispatch","initialValues","setSubmitting","unwrapResult","errorMessage","validationSchema","props","handleChange","handleBlur","handleSubmit","RegisterModule","LoginModalComponent","useState","setForm","useSelector","handleSwitchForm","useEffect","onClick","initial","x","animate","PATH_HOME","NavLink","avatarUrl","margin","PATH_ACCOUNT_SETTING","App","playerRedux","listPlaying","audioRef","useRef","volumeRef","isAuthPage","window","location","pathname","assign","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","quietUpdate","defaultPosition","right","top","audioLists","showDownload","glassBg","mode","autoPlay","getAudioInstance","ref","current","clearPriorAudioLists","showThemeSwitch","onAudioListsChange","currentPlayId","audioInfo","onAudioPlay","volume","onAudioProgress","duration","currentTime","then","console","log","catch","finally","onAudioPause","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"oZAIaA,EAAQC,2BAAiB,aAAD,uCAAe,WAAOC,EAAP,oBAAAC,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAE1BC,GAAQL,MAAME,GAFY,cAEtCI,EAFsC,yBAGrCA,EAAIC,MAHiC,yDAKrCH,EAAgB,EAAD,KALsB,yDAAf,yDASxBI,EAAWP,2BAAiB,gBAAD,uCAAkB,WAAOC,EAAP,oBAAAC,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAEhCC,GAAQG,SAASN,GAFe,cAE5CI,EAF4C,yBAG3CA,EAAIC,MAHuC,yDAK3CH,EAAgB,EAAD,KAL4B,yDAAlB,yDAS3BK,EAAUR,2BAAiB,eAAD,uCAAiB,WAAOC,EAAP,oBAAAC,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAE9BC,GAAQI,UAFsB,cAE1CH,EAF0C,yBAGzCA,EAAIC,MAHqC,yDAKzCH,EAAgB,EAAD,KAL0B,yDAAjB,yDAejCM,EAAOC,sBAAY,CACrBC,KAAM,OACNC,aARiB,CACjBC,YAAa,KACbC,SAAU,KACVC,WAAW,GAMXC,SAAU,CACNC,OADM,SACCC,GACHA,EAAML,YAAc,KACpBK,EAAMJ,SAAW,KACjBI,EAAMH,WAAY,IAG1BI,cAAe,SAACC,GACZA,EAAQC,QAAQtB,EAAMuB,WAAW,SAACJ,EAAOK,GACrC,MAAuBA,EAAOC,QAAtBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,KACdP,EAAMJ,SAAWR,EACjBY,EAAML,YAAcY,EAAKC,MACzBR,EAAMH,WAAY,KAGtBK,EAAQC,QAAQtB,EAAM4B,SAAS,SAACT,GAC5BA,EAAMH,WAAY,KAGtBK,EAAQC,QAAQtB,EAAM6B,UAAU,SAACV,GAC7BA,EAAML,YAAc,KACpBK,EAAMJ,SAAW,KACjBI,EAAMH,WAAY,KAGtBK,EAAQC,QAAQd,EAASe,WAAW,SAACJ,EAAOK,GACxC,MAAuBA,EAAOC,QAAtBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,KACdP,EAAMJ,SAAWR,EACjBY,EAAML,YAAcY,EAAKC,MACzBR,EAAMH,WAAY,KAGtBK,EAAQC,QAAQd,EAASoB,SAAS,SAACT,GAC/BA,EAAMH,WAAY,KAGtBK,EAAQC,QAAQd,EAASqB,UAAU,SAACV,GAChCA,EAAML,YAAc,KACpBK,EAAMJ,SAAW,KACjBI,EAAMH,WAAY,KAGtBK,EAAQC,QAAQb,EAAQc,WAAW,SAACJ,EAAOK,GACvC,IAAQjB,EAASiB,EAAOC,QAAhBlB,KACRY,EAAMJ,SAAWR,EACjBY,EAAMH,WAAY,KAGtBK,EAAQC,QAAQb,EAAQmB,SAAS,SAACT,GAC9BA,EAAMH,WAAY,QAKjBc,EAAe,SAAAX,GAAK,OAAIA,EAAMT,MAE5BQ,EAAWR,EAAKqB,QAAhBb,OAEAR,IAAf,QCtFMsB,GAASrB,EAVSsB,EAAQ,IAAxBtB,aAUmB,CACvBC,KAAM,SACNC,aAViB,CACjBqB,SAAU,GACVC,YAAa,KACbC,WAAW,EACXC,UAAU,EACVC,gBAAiB,IAMjBrB,SAAU,CACNsB,eAAgB,SAACpB,EAAOK,GACAA,EAAZC,QACAe,SAAQ,SAAAC,GACMtB,EAAMe,SAASQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,WAAaH,EAAKG,cAEjEzB,EAAMe,SAASW,KAAKJ,GACpBK,IAAMC,QAAQ,wDAI1BC,gBAAiB,SAAC7B,EAAOK,GACrB,IAAQC,EAAYD,EAAZC,QACRN,EAAMe,SAAWT,GAErBwB,KAAM,SAAC9B,GACHA,EAAMiB,WAAY,GAEtBc,MAAO,SAAC/B,GACJA,EAAMiB,WAAY,GAEtBe,gBAAiB,SAAChC,GACdA,EAAMe,SAAW,IAErBkB,YAAa,SAACjC,GACVA,EAAMkB,UAAW,GAErBgB,WAAY,SAAClC,GACTA,EAAMkB,UAAW,GAErBiB,cAAe,SAACnC,EAAOK,GACnBL,EAAMmB,gBAAgBO,KAAKrB,EAAOC,UAEtC8B,kBAAmB,SAACpC,EAAOK,GACvBL,EAAMgB,YAAcX,EAAOC,YAK1B+B,EAAiB,SAAArC,GAAK,OAAIA,EAAMa,QAEtC,EAUHA,EAAOD,QARPkB,GAFG,EACHV,eADG,EAEHU,MACAC,EAHG,EAGHA,MACAF,EAJG,EAIHA,gBAEAI,GANG,EAKHD,gBALG,EAMHC,aAEAE,GARG,EAOHD,WAPG,EAQHC,eACAC,EATG,EASHA,kBAGWvB,IAAf,QC7DMyB,EAAU9C,sBAAY,CACxBC,KAAM,UACNC,aAPiB,CACjB4C,QAAS,GACTC,SAAU,IAMVzC,SAAU,CACN0C,cAAe,SAACxC,EAAOK,GACnB,IAAMoC,EAAYzC,EAAMsC,QAAQI,WAAU,SAAApB,GAAI,OAAIjB,EAAOC,QAAQmB,WAAaH,EAAKG,aAChE,IAAfgB,GAGAzC,EAAMsC,QAAQK,OAAOF,EAAW,GAFhCzC,EAAMsC,QAAQM,QAAQvC,EAAOC,SAKjCN,EAAMuC,SAAWvC,EAAMsC,QAAQO,MAAM,EAAG,OAQhDL,EACAF,EAAQ1B,QADR4B,cAGWF,IAAf,QCxBMQ,EAAYtD,sBAAY,CAC1BC,KAAM,YACNC,aANiB,CACjBqD,iBAAiB,GAMjBjD,SAAU,CACNkD,cAAe,SAAChD,GACZA,EAAM+C,iBAAkB,GAE5BE,gBAAiB,SAACjD,GACdA,EAAM+C,iBAAkB,MAKvBG,EAAoB,SAAAlD,GAAK,OAAIA,EAAM8C,WAEzC,EAGHA,EAAUlC,QADVqC,GAFG,EACHD,cADG,EAEHC,iBAGWH,IAAf,QCPeK,EAPKC,YAAgB,CAChC7D,KAAM8D,EACNxC,OAAQyC,EACRhB,QAASiB,EACTT,UAAWU,ICTTC,EAAgB,CAClBC,IAAK,OACLC,YACAC,UAAW,CAAC,OAAQ,YAGlBC,EAAmBC,YAAeL,EAAeN,GAEjDY,EAAQC,yBAAe,CACzBC,QAASJ,EACTK,WAAY,CAACC,OAKJC,GAAYC,YAAaN,GAEvBA,KCrBTO,GAAcxD,EAAQ,KAEtByD,GAAcC,IAAMC,OAAO,CAC7BC,QAAS,yCAETC,QAAS,CACL,eAAgB,mBAChB,mBAAoB,kBAGxBC,iBAAkB,SAACC,GAAD,OAAYP,GAAYQ,UAAUD,MAGxDN,GAAYQ,aAAaC,QAAQC,KAAI,SAACC,GAClC,IAAM1E,EAAQuD,GAAMoB,WAAW5F,KAAKI,YAKpC,OAJIa,IACA0E,EAAOP,QAAQS,cAAf,iBAAyC5E,IAGtC0E,KAGXX,GAAYQ,aAAaM,SAASJ,KAC9B,SAACI,GACG,OAAIA,GAAYA,EAASjG,KACdiG,KAKf,SAACC,GAKG,MAHIA,EAAMD,UAAsC,MAA1BC,EAAMD,SAASE,QACjCxB,GAAMyB,SAASzF,KAEbuF,KAICf,I,eAAAA,MCxCFrF,GAAU,CACnBL,MADmB,SACbE,GAEF,OAAOwF,GAAYkB,KADP,cACiB1G,IAEjCM,SALmB,SAKVN,GAEL,OAAOwF,GAAYkB,KADP,iBACiB1G,IAEjCO,QATmB,WAWf,OAAOiF,GAAYmB,IADP,QAGhBC,WAbmB,SAaR5G,GAEP,OAAOwF,GAAYqB,MADP,QACkB7G,KCdzB8G,GAYM,SAACC,GACZ,IAAMC,EAAM,UAAYD,EACxB,OAAOvB,GAAYkB,KAAKM,I,QCdnBC,ICDiBC,IAAOC,IAAV,gMCAWD,IAAOC,IAAV,oKFCd,CACjBC,OAAQ,CACJC,KAAM,UACNC,UAAW,UACXC,OAAQ,UACRC,OAAQ,UACRC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,MAAO,UACPC,MAAO,WAEXC,YAAa,CACTC,WAAY,QACZC,YAAa,QACbC,kBAAmB,QACnBC,YAAa,QACbC,gBAAiB,QACjBC,YAAa,QACbC,aAAc,SACdC,WAAY,SACZC,SAAU,YAILC,GAMI,kBAAaC,YAAZ,KAAD,4FACY5B,GAAMiB,YAAYE,YACjCS,IAAG,WAAH,eARDD,GAgBI,kBAAaC,YAAZ,KAAD,4FACY5B,GAAMiB,YAAYI,YACjCO,IAAG,WAAH,eAlBDD,GA0BK,kBAAaC,YAAZ,KAAD,4FACW5B,GAAMiB,YAAYO,aACjCI,IAAG,WAAH,e,SG1DDC,GAAcC,OAAaC,MAAM,CAC1CC,MAAOF,OAAaG,SAAS,2BAA2BD,MAAM,qBAC9DE,SAAUJ,OAAaG,SAAS,6BAGvBE,GAAiBL,OAAaC,MAAM,CAC7CC,MAAOF,OAAaG,SAAS,2BAA2BD,MAAM,qBAC9DE,SAAUJ,OAAaG,SAAS,2BAChCG,gBAAiBN,OAAaG,SAAS,2BAA2BI,MAAM,CAACP,KAAQ,YAAa,MAAO,0BCV5FQ,GAAkB,SAACC,GAS5B,MARe,CACX7E,IAAK6E,EAAS7E,KAAO6E,EAASzC,KAC9BrG,KAAM8I,EAAS9I,KACfgC,SAAU8G,EAAS9G,UAAY8G,EAASC,QACxCC,MAAOF,EAASE,OAASF,EAASG,SAClCC,OAAQJ,EAASI,QAAU,GAC3BC,MAAOL,EAASK,OAASL,EAASM,SCHT5C,IAAOC,IAAV,gpEAOpByB,GAPoB,4EAiBpBA,GAjBoB,8IA6BhBA,GA7BgB,8EA+CZA,GA/CY,sFAmDZA,GAnDY,sFAuDZA,GAvDY,sFAkEpBA,GAlEoB,mGAuEpBA,GAvEoB,sEA2EpBA,GA3EoB,sECJvB,I,2HCEMmB,GAAe7C,IAAO8C,OAAV,6MAQG,SAAAC,GAAC,OAAIA,EAAEhD,MAAMG,OAAOE,aAInC4C,GAAqBhD,YAAO6C,GAAP7C,CAAH,uKAGP,SAAA+C,GAAC,OAAIA,EAAEE,SAAW,OAAS,iBAGvB,SAAAF,GAAC,OAAIA,EAAEE,SAAW,OAASF,EAAEhD,MAAMG,OAAOE,aClBzD8C,ICAmBlD,IAAOC,IAAV,iRAWQD,IAAOC,IAAV,6ODXDD,IAAOC,IAAV,qD,IEAED,IAAOC,IAAV,gF,oBCyEXD,YAAOmD,KAAOlD,IAAdD,CAAH,unCACS,SAAA+C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOE,aAiBZ,SAAA2C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOU,UAEtC,SAAAmC,GAAC,OAAIA,EAAE/H,UAAY,yCAA2C,MAezC,SAAA+H,GAAC,OAAIA,EAAEhD,MAAMG,OAAOQ,U,OCG1CV,IAAOC,IAAV,wcACc,SAAA8C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOE,aAWZ,SAAA2C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOC,QAclCH,YAAOmD,KAAOlD,IAAdD,CAAH,w2DAST,gBAAGoD,EAAH,EAAGA,OAAQrD,EAAX,EAAWA,MAAX,OAAuBqD,EAAM,mFAEArD,EAAMG,OAAOM,OAFb,oFAK3B,KAECkB,GAhBM,qEAsBDA,GAtBC,4EA6BQ,SAAAqB,GAAC,OAAIA,EAAEM,MAAQ,KAAON,EAAEO,UAAY,OAAS,UAItD5B,GAjCC,+EAoDGA,GApDH,mFA0Ea,SAAAqB,GAAC,OAAIA,EAAEhD,MAAMG,OAAOM,SAOtCkB,GAjFK,2J,QCvIF6B,GAAiB,SAAC,GASxB,IAAD,IARFC,aAQE,MARM,GAQN,MAPFC,aAOE,MAPM,GAON,MANFC,YAME,MANK,OAML,MALFrE,aAKE,MALM,GAKN,MAJFsE,eAIE,aAHFnK,YAGE,MAHK,GAGL,MAFFoK,gBAEE,MAFS,aAET,MADFC,cACE,MADO,aACP,EAEF,OACI,eAACC,GAAD,UACI,eAACC,GAAA,EAAD,CACIP,MAAOA,EACPQ,WAAS,EACTP,MAAOA,EACPC,KAAMA,EACNrE,QAASA,GAASsE,EAClBM,WAAc5E,GAASsE,EAAUtE,EAAQ,GACzC7F,KAAMA,EACN0K,QAAQ,WACRN,SAAUA,EACVC,OAAQA,EACRM,aAAa,QAMvBL,GAAkB9D,IAAOC,IAAV,w7BC5BRmE,GAAqB,SAAC,GAQ5B,IAAD,IAPFC,cAOE,MAPO,GAOP,MANFC,cAME,MANO,GAMP,MALFX,eAKE,MALQ,GAKR,MAJFC,gBAIE,MAJS,aAIT,MAHFC,cAGE,MAHO,aAGP,MAFFU,gBAEE,MAFS,aAET,MADFC,oBACE,SAEF,OACI,gBAAC,GAAD,CAAWD,SAAUA,EAArB,UACI,sBAAKE,UAAU,UAAf,mBAGA,uBAAKA,UAAU,WAAf,UACI,eAACvB,GAAD,UACI,eAAC,GAAD,CACIM,MAAM,QACNC,MAAOY,EAAOtC,MACd1C,MAAOiF,EAAOvC,MACd4B,QAASA,EAAQ5B,MACjBvI,KAAK,QACLoK,SAAUA,EACVC,OAAQA,MAGhB,eAACX,GAAD,UACI,eAAC,GAAD,CACIM,MAAM,WACNC,MAAOY,EAAOpC,SACd5C,MAAOiF,EAAOrC,SACd0B,QAASA,EAAQ1B,SACjBzI,KAAK,WACLoK,SAAUA,EACVC,OAAQA,EACRH,KAAK,kBAIjB,sBAAKe,UAAU,WAAf,SACI,eAACzB,GAAD,CAAoBU,KAAK,SAASQ,QAAQ,YAAYjB,SAAUuB,EAAhE,yBAMVE,GAAY1E,YAAOmD,KAAOwB,KAAd3E,CAAH,kcAIY,SAAA+C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOQ,UCnDlCkE,GAAwB,SAAC,GAQ/B,IAAD,IAPFP,cAOE,MAPO,GAOP,MANFC,cAME,MANO,GAMP,MALFX,eAKE,MALQ,GAKR,MAJFC,gBAIE,MAJS,aAIT,MAHFC,cAGE,MAHO,aAGP,MAFFU,gBAEE,MAFS,aAET,MADFC,oBACE,SAEF,OACI,gBAAC,GAAD,CAAWD,SAAUA,EAArB,UACI,sBAAKE,UAAU,UAAf,sBAGA,uBAAKA,UAAU,WAAf,UACI,eAACvB,GAAD,UACI,eAAC,GAAD,CACIM,MAAM,QACNC,MAAOY,EAAOtC,MACd1C,MAAOiF,EAAOvC,MACd4B,QAASA,EAAQ5B,MACjBvI,KAAK,QACLoK,SAAUA,EACVC,OAAQA,MAGhB,eAACX,GAAD,UACI,eAAC,GAAD,CACIM,MAAM,WACNC,MAAOY,EAAOpC,SACd5C,MAAOiF,EAAOrC,SACd0B,QAASA,EAAQ1B,SACjBzI,KAAK,WACLoK,SAAUA,EACVC,OAAQA,EACRH,KAAK,eAGb,eAACR,GAAD,UACI,eAAC,GAAD,CACIM,MAAM,mBACNC,MAAOY,EAAOlC,gBACd9C,MAAOiF,EAAOnC,gBACdwB,QAASA,EAAQxB,gBACjB3I,KAAK,kBACLoK,SAAUA,EACVC,OAAQA,EACRH,KAAK,kBAIjB,sBAAKe,UAAU,WAAf,SACI,eAACzB,GAAD,CAAoBkB,QAAQ,YAAYjB,SAAUuB,EAAcd,KAAK,SAArE,4BAMVgB,GAAY1E,YAAOmD,KAAOwB,KAAd3E,CAAH,kcAIY,SAAA+C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOQ,U,oBClElCmE,GAAiB,WAC1B,OACI,eAAC,GAAD,CAAWJ,UAAU,aAArB,SACI,eAAC,KAAD,CAAaK,MAAM,eAKzBJ,GAAY1E,IAAOC,IAAV,qLCXF8E,ICiCK/E,IAAOC,IAAV,wqBACS,SAAA8C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOE,aAcZ,SAAA2C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOC,QAIhB,SAAA4C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOY,SCItCd,IAAOC,IAAV,ysCAqCoB,SAAA8C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOQ,UC/DrCV,YAAOmD,KAAOlD,IAAdD,CAAH,8LH9BW,c,iBISbgF,GAAc,SAAC,GAAkC,IAAD,IAA/BC,qBAA+B,MAAf,aAAe,EACnD1F,EAAW2F,cAKjB,OACI,eAAC,KAAD,CACIC,cANmB,CACvBpD,MAAO,2BACPE,SAAU,WAKNsC,SAAQ,uCAAE,WAAOF,EAAP,sBAAAtL,EAAA,6DAAiBqM,EAAjB,EAAiBA,cAAjB,kBAEgB7F,EAAS3G,EAAMyL,IAF/B,OAEInL,EAFJ,OAGFmM,uBAAanM,GACTA,GACA+L,IALF,gDAQFG,GAAc,GACVE,EAAe,GAEfA,EADwB,MAAxB,KAAIlG,SAASE,OACE,sDAEA,qCAEnB5D,IAAM2D,MAAMiG,GAfV,yDAAF,wDAkBRC,iBAAkB3D,GApBtB,SAsBK,SAAC4D,GACE,IAAQnB,EAAkFmB,EAAlFnB,OAAQC,EAA0EkB,EAA1ElB,OAAQX,EAAkE6B,EAAlE7B,QAAS8B,EAAyDD,EAAzDC,aAAcC,EAA2CF,EAA3CE,WAAYC,EAA+BH,EAA/BG,aAAcnB,EAAiBgB,EAAjBhB,aACzE,OACI,eAAC,GAAD,CACIH,OAAQA,EACRC,OAAQA,EACRX,QAASA,EACTC,SAAU6B,EACV5B,OAAQ6B,EACRnB,SAAUoB,EACVnB,aAAcA,Q,iCCvCzBoB,GAAiB,SAAC,GAAkC,IAAD,IAA/BX,qBAA+B,MAAf,aAAe,EACtD1F,EAAW2F,cAMjB,OACI,eAAC,KAAD,CACIC,cAPc,CAClBpD,MAAO,GACPE,SAAU,GACVE,gBAAiB,IAKboC,SAAQ,uCAAE,WAAOF,EAAP,wBAAAtL,EAAA,6DAAiBqM,EAAjB,EAAiBA,cAAjB,SAEmCf,EAA7BlC,gBAAoBrJ,EAF1B,aAEmCuL,EAFnC,aAGgB9E,EAASnG,EAASN,IAHlC,OAGII,EAHJ,OAIFmM,uBAAanM,GACTA,GACA+L,IANF,kDASFG,GAAc,GACVE,EAAe,GAEfA,EADwB,MAAxB,KAAIlG,SAASE,OACE,6DAEA,iCAEnB5D,IAAM2D,MAAMiG,GAhBV,0DAAF,wDAmBRC,iBAAkBrD,GArBtB,SAuBK,SAACsD,GACE,IAAQnB,EAAkFmB,EAAlFnB,OAAQC,EAA0EkB,EAA1ElB,OAAQX,EAAkE6B,EAAlE7B,QAAS8B,EAAyDD,EAAzDC,aAAcC,EAA2CF,EAA3CE,WAAYC,EAA+BH,EAA/BG,aAAcnB,EAAiBgB,EAAjBhB,aACzE,OACI,eAAC,GAAD,CACIH,OAAQA,EACRC,OAAQA,EACRX,QAASA,EACTC,SAAU6B,EACV5B,OAAQ6B,EACRnB,SAAUoB,EACVnB,aAAcA,QCxCzBqB,GAAsB,SAAC,GAAkC,IAAD,IAA/BZ,qBAA+B,MAAf,aAAe,EACjE,EAAwBa,mBAASf,IAAjC,mBAAOJ,EAAP,KAAaoB,EAAb,KACMxG,EAAW2F,cACXtL,EAAYoM,YAAYtL,GAAcd,UACtCqM,EAAmB,WAEjBF,EADApB,IAASI,GNdQ,gBMiBTA,KAQhB,OAJAmB,qBAAU,WACN3G,EAASvD,OAEV,IAEC,gBAAC,GAAD,CAAWyI,UAAU,aAArB,UACI,sBAAKA,UAAU,UAAU0B,QAASlB,IAClC,gBAAC9B,GAAA,EAAOlD,IAAR,CACIwE,UAAU,cACV2B,QAAS,CACLC,EAAG,KAEPC,QAAS,CACLD,EAAG,GANX,UASI,yBAAQ5B,UAAU,cAAc0B,QAASlB,EAAzC,kBACCN,IAASI,GACN,uCACI,eAAC,GAAD,CAAaE,cAAeA,IAC5B,qBAAGR,UAAU,SAAb,yDAA6C,uBAAM0B,QAASF,EAAf,wCAGjD,uCACI,eAAC,GAAD,CAAgBhB,cAAeA,IACnC,qBAAGR,UAAU,SAAb,0DAA2C,uBAAM0B,QAASF,EAAf,+CAIlDrM,GAAa,eAAC,GAAD,QAKpB8K,GAAY1E,IAAOC,IAAV,y8BAqBa,SAAA8C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOC,QAwBvB,SAAA4C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOI,UC/FhCiG,ICqCKvG,IAAOC,IAAV,oKAMS,SAAA8C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOC,OAEtCuB,GARS,4DAaF1B,YAAOwG,IAAPxG,CAAH,qP,OCoEYA,IAAOC,IAAV,4wBAyCTyB,GAzCS,qEC7GD1B,IAAOC,IAAV,yZACS,SAAA8C,GAAC,OAAIA,EAAEhD,MAAMG,OAAOE,YAYlCsB,GAbK,kGAmBiB,SAAAqB,GAAC,OAAIA,EAAEhD,MAAMG,OAAOC,QCflCH,IAAOC,IAAV,0bACF,SAAA8C,GAAC,OAAIA,EAAEM,MAAQ,QACd,SAAAN,GAAC,OAAIA,EAAEM,MAAQ,QAED,SAAAN,GAAC,OAAIA,EAAE0D,UAAY1D,EAAE0D,UAAY,MAI/C,SAAA1D,GAAC,OAAIA,EAAE0D,UAAF,oBAA2B1D,EAAEhD,MAAMG,OAAOM,QAAW,WAU/C,SAAAuC,GAAC,OAAIA,EAAEM,MAAQ,QCjBtBrD,IAAOC,IAAV,mEAED,SAAA8C,GAAC,OAAIA,EAAE2D,OAAS,QLhBL,KAEZC,GAAuB,WMOvBC,GAAM,WACf,IAAMC,EAAcb,YAAY5J,GAC1B0K,EAAcD,EAAY/L,SAC1BE,EAAY6L,EAAY7L,UACxBE,EAAkB2L,EAAY3L,gBAC9BvB,EAAWqM,YAAYtL,GAAcf,SACrCmD,EAAkBkJ,YAAY/I,GAAmBH,gBACjDiK,EAAWC,iBAAO,MAClBzH,EAAW2F,cACX+B,EAAYD,iBAAO,MAmDzB,OAPAd,qBAAU,WACN,IAAMgB,EAAaC,OAAOC,SAASC,WAAaV,IAC3ChN,GAAYuN,GACbC,OAAOC,SAASE,OAAOf,MAE5B,CAAC5M,IAGA,uBAAK8K,UAAU,MAAf,UAEI,eAAC,IAAD,CACI8C,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,WAAS,IAEb,eAAC,IAAD,CACIC,aAAW,EACXC,gBAAiB,CAAEC,MAAO,IAAKC,IAAK,KACpCC,WAAYpB,EACZqB,cAAc,EACdC,SAAO,EACPC,KAAK,OACLC,SAAUtN,EACVuN,iBArEQ,SAACC,GACjBzB,EAAS0B,QAAUD,GAqEXE,sBAAoB,EACpBC,iBAAiB,EACjB5I,MAAO,OACP6I,mBArEiB,SAACC,EAAeX,EAAYY,GACrDvJ,EAAS3D,EAAgBsM,KAqEjBa,YAlEY,SAACD,GAChB7B,EAAUwB,UACX1B,EAAS0B,QAAQO,OAAS,IAC1B/B,EAAUwB,QAAU1B,EAAS0B,QAAQO,QAEzC,IAAM1G,EAAWD,GAAgByG,GACjCvJ,EAAShD,EAAc+F,IACvB/C,EAASpD,EAAkBmG,IAC3B/C,EAAS1D,MA2DDoN,gBAxDgB,SAACH,GACR,IAAMA,EAAUI,SAAWJ,EAAUK,aACtC,KACKjO,EAAgBI,MAAK,SAAAuE,GAAI,OAAIA,IAASiJ,EAAUrL,QAE7DmC,GAAsBkJ,EAAUrL,KAC/B2L,KAAKC,QAAQC,KACbC,MAAMF,QAAQC,KACdE,SAAQ,WACLjK,EAASrD,EAAc4M,EAAUrL,WAgDrCgM,aA1Ca,WACrBlK,EAASzD,QA2CJgB,GACG,eAAC,GAAD,CACImI,cA1CU,WACtB1F,EAASvC,YCrDF0M,I,cAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCMdO,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAerK,MAAOA,GAAtB,SACE,eAAC,IAAD,CAAasK,QAAS,KAAMlM,UAAWA,GAAvC,SACE,eAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,eAAC,GAAD,YAKRwM,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.59bf3222.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { authApi } from \"src/Api\";\r\n\r\nexport const login = createAsyncThunk(\"auth/login\", async (body, { rejectWithValue }) => {\r\n    try {\r\n        const res = await authApi.login(body);\r\n        return res.data;\r\n    } catch (err) {\r\n        return rejectWithValue(err);\r\n    }\r\n});\r\n\r\nexport const register = createAsyncThunk(\"auth/register\", async (body, { rejectWithValue }) => {\r\n    try {\r\n        const res = await authApi.register(body);\r\n        return res.data;\r\n    } catch (err) {\r\n        return rejectWithValue(err);\r\n    }\r\n});\r\n\r\nexport const getInfo = createAsyncThunk(\"auth/getInfo\", async (body, { rejectWithValue }) => {\r\n    try {\r\n        const res = await authApi.getInfo();\r\n        return res.data;\r\n    } catch (err) {\r\n        return rejectWithValue(err);\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    accessToken: null,\r\n    userInfo: null,\r\n    isLoading: false\r\n};\r\n\r\nconst auth = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        logout(state) {\r\n            state.accessToken = null;\r\n            state.userInfo = null;\r\n            state.isLoading = false;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(login.fulfilled, (state, action) => {\r\n            const { data, meta } = action.payload;\r\n            state.userInfo = data;\r\n            state.accessToken = meta.token;\r\n            state.isLoading = false;\r\n        })\r\n\r\n        builder.addCase(login.pending, (state) => {\r\n            state.isLoading = true;\r\n        });\r\n\r\n        builder.addCase(login.rejected, (state) => {\r\n            state.accessToken = null;\r\n            state.userInfo = null;\r\n            state.isLoading = false;\r\n        });\r\n\r\n        builder.addCase(register.fulfilled, (state, action) => {\r\n            const { data, meta } = action.payload;\r\n            state.userInfo = data;\r\n            state.accessToken = meta.token;\r\n            state.isLoading = false;\r\n        })\r\n\r\n        builder.addCase(register.pending, (state) => {\r\n            state.isLoading = true;\r\n        });\r\n\r\n        builder.addCase(register.rejected, (state) => {\r\n            state.accessToken = null;\r\n            state.userInfo = null;\r\n            state.isLoading = false;\r\n        });\r\n\r\n        builder.addCase(getInfo.fulfilled, (state, action) => {\r\n            const { data } = action.payload;\r\n            state.userInfo = data;\r\n            state.isLoading = false;\r\n        })\r\n\r\n        builder.addCase(getInfo.pending, (state) => {\r\n            state.isLoading = true;\r\n        });\r\n    }\r\n});\r\n\r\nexport const authSelector = state => state.auth;\r\n\r\nexport const { logout } = auth.actions;\r\n\r\nexport default auth.reducer;","import { toast } from \"react-toastify\";\r\n\r\nconst { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst initialState = {\r\n    playlist: [],\r\n    currentSong: null,\r\n    isPlaying: false,\r\n    isClosed: false,\r\n    listPlayedSongs: []\r\n}\r\n\r\nconst player = createSlice({\r\n    name: \"player\",\r\n    initialState,\r\n    reducers: {\r\n        concatPlaylist: (state, action) => {\r\n            const { payload } = action;\r\n            payload.forEach(song => {\r\n                const isExisted = state.playlist.some(item => item.musicSrc === song.musicSrc);\r\n                if (!isExisted) {\r\n                    state.playlist.push(song);\r\n                    toast.success(\"Đã thêm vào danh sách phát!\");\r\n                }\r\n            });\r\n        },\r\n        replacePlaylist: (state, action) => {\r\n            const { payload } = action;\r\n            state.playlist = payload;\r\n        },\r\n        play: (state) => {\r\n            state.isPlaying = true;\r\n        },\r\n        pause: (state) => {\r\n            state.isPlaying = false;\r\n        },\r\n        refreshPlaylist: (state) => {\r\n            state.playlist = [];\r\n        },\r\n        closePlayer: (state) => {\r\n            state.isClosed = true;\r\n        },\r\n        openPlayer: (state) => {\r\n            state.isClosed = false;\r\n        },\r\n        addPlayedSong: (state, action) => {\r\n            state.listPlayedSongs.push(action.payload);\r\n        },\r\n        updateCurrentSong: (state, action) => {\r\n            state.currentSong = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const playerSelector = state => state.player;\r\n\r\nexport const {\r\n    concatPlaylist,\r\n    play,\r\n    pause,\r\n    replacePlaylist,\r\n    refreshPlaylist,\r\n    closePlayer,\r\n    openPlayer,\r\n    addPlayedSong,\r\n    updateCurrentSong\r\n} = player.actions;\r\n\r\nexport default player.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    history: [],\r\n    recently: [],\r\n};\r\n\r\nconst history = createSlice({\r\n    name: \"history\",\r\n    initialState,\r\n    reducers: {\r\n        updateHistory: (state, action) => {\r\n            const songIndex = state.history.findIndex(song => action.payload.musicSrc === song.musicSrc);\r\n            if (songIndex === -1) {\r\n                state.history.unshift(action.payload);\r\n            } else {\r\n                state.history.splice(songIndex, 1);\r\n                state.history.unshift(action.payload);\r\n            }\r\n            state.recently = state.history.slice(0, 4);\r\n        }\r\n    }\r\n});\r\n\r\nexport const historySelector = state => state.history;\r\n\r\nexport const {\r\n    updateHistory\r\n} = history.actions;\r\n\r\nexport default history.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    isShowFormLogin: false\r\n};\r\n\r\nconst formLogin = createSlice({\r\n    name: \"formLogin\",\r\n    initialState,\r\n    reducers: {\r\n        showFormLogin: (state) => {\r\n            state.isShowFormLogin = true;\r\n        },\r\n        hiddenFormLogin: (state) => {\r\n            state.isShowFormLogin = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport const formLoginSelector = state => state.formLogin;\r\n\r\nexport const {\r\n    showFormLogin,\r\n    hiddenFormLogin,\r\n} = formLogin.actions;\r\n\r\nexport default formLogin.reducer;","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from \"./auth\";\r\nimport playerReducer from \"./player\";\r\nimport historyReducer from \"./history\";\r\nimport formLoginReducer from \"./formLogin\";\r\n\r\nexport * from './auth';\r\nexport * from './player';\r\nexport * from './history';\r\nexport * from './formLogin';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    player: playerReducer,\r\n    history: historyReducer,\r\n    formLogin: formLoginReducer,\r\n});\r\n\r\nexport default rootReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from './slices';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: [\"auth\", \"history\"]\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({ \r\n    reducer: persistedReducer,\r\n    middleware: [thunk]\r\n});\r\n\r\nexport * from \"./slices\";\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport store, { logout } from \"src/Redux\";\r\n\r\nconst queryString = require(\"query-string\");\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: \"https://media-player-be.herokuapp.com/\",\r\n\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-Requested-With\": \"XMLHttpRequest\",\r\n    },\r\n\r\n    paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use((config) => {\r\n    const token = store.getState().auth.accessToken;\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n    (response) => {\r\n        if (response && response.data) {\r\n            return response;\r\n        }\r\n        return response;\r\n    },\r\n\r\n    (error) => {\r\n        // Handle errors\r\n        if (error.response && error.response.status === 401) {\r\n            store.dispatch(logout());\r\n        }\r\n        throw error;\r\n    }\r\n);\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nexport const authApi = {\r\n    login(body) {\r\n        const url = \"/auth/login\";\r\n        return axiosClient.post(url, body);\r\n    },\r\n    register(body) {\r\n        const url = \"/auth/register\";\r\n        return axiosClient.post(url, body);\r\n    },\r\n    getInfo() {\r\n        const url = \"/me\";\r\n        return axiosClient.get(url);\r\n    },\r\n    updateInfo(body) {\r\n        const url = \"/auth\";\r\n        return axiosClient.patch(url, body);\r\n    }\r\n};","import axiosClient from \"./axiosClient\";\r\n\r\n\r\nexport const songApi = {\r\n    getListSongs: (query) => {\r\n        const queryParams = Object.keys(query).map((key, index) => {\r\n            if (index === 0) {\r\n                return `?${key}=${query[key]}`;\r\n            } else {\r\n                return `&${key}=${query[key]}`;\r\n            }\r\n        }).join(\"\");\r\n        const url = \"/songs\" + queryParams;\r\n        return axiosClient.get(url);\r\n    },\r\n    incrementView: (slug) => {\r\n        const url = \"/songs/\" + slug;\r\n        return axiosClient.post(url);\r\n    }\r\n};","import { css } from \"styled-components\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport const theme = {\r\n    colors: {\r\n        main: \"#170F23\",\r\n        secondary: \"#3F0537\",\r\n        purple: \"#7200A1\",\r\n        orange: \"#FF5D24\",\r\n        gray: \"#F6F6F6\",\r\n        gray_1: \"#333333\",\r\n        gray_2: \"#4f4f4f\",\r\n        gray_3: \"#828282\",\r\n        gray_4: \"#BDBDBD\",\r\n        gray_5: \"#E0E0E0\",\r\n        gray_6: \"#F2F2F2\",\r\n        black: \"#231B2E\",\r\n        bgBtn: \"#430538\"\r\n    },\r\n    breakPoints: {\r\n        breakSmall: \"320px\",\r\n        breakMobile: \"540px\",\r\n        breakMobileMedium: \"575px\",\r\n        breakTablet: \"770px\",\r\n        breakOnlyMobile: \"768px\",\r\n        breakMedium: \"980px\",\r\n        breakIpadPro: \"1024px\",\r\n        breakLarge: \"1200px\",\r\n        breakBig: \"1366px\",\r\n    }\r\n};\r\n\r\nexport const breakpoint = {\r\n    breakSmall: (...args) => css`\r\n        @media (max-width: ${theme.breakPoints.breakSmall}) {\r\n            ${css(...args)}\r\n        }\r\n    `,\r\n    breakMobile: (...args) => css`\r\n        @media (max-width: ${theme.breakPoints.breakMobile}) {\r\n            ${css(...args)}\r\n        }\r\n    `,\r\n    breakMobileMedium: (...args) => css`\r\n        @media (max-width: ${theme.breakPoints.breakMobileMedium}) {\r\n            ${css(...args)}\r\n        }\r\n    `,\r\n    breakTablet: (...args) => css`\r\n        @media (max-width: ${theme.breakPoints.breakTablet}) {\r\n            ${css(...args)}\r\n        }\r\n    `,\r\n    breakMedium: (...args) => css`\r\n        @media (max-width: ${theme.breakPoints.breakMedium}) {\r\n            ${css(...args)}\r\n        }\r\n    `,\r\n    breakIpadPro: (...args) => css`\r\n        @media (max-width: ${theme.breakPoints.breakIpadPro}) {\r\n            ${css(...args)}\r\n        }\r\n    `,\r\n    breakLarge: (...args) => css`\r\n        @media (max-width: ${theme.breakPoints.breakLarge}) {\r\n            ${css(...args)}\r\n        }\r\n    `,\r\n    breakBig: (...args) => css`\r\n        @media (max-width: ${theme.breakPoints.breakBig}) {\r\n            ${css(...args)}\r\n        }\r\n    `,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHomePage = styled.div`\r\n    min-height: 100vh;\r\n\r\n    .listTopSongs {\r\n        padding: 20px;\r\n    }\r\n\r\n    .noSongs {\r\n        margin-top: 10px;\r\n        padding-left: 10px;\r\n    }\r\n\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledSearchResultPage = styled.div`\r\n    padding-left: 30px;\r\n\r\n    .heading {\r\n        font-size: 30px;\r\n        margin-left: -20px;\r\n        padding-top: 20px;\r\n    }\r\n`;","import * as yup from 'yup';\r\n\r\nexport const loginSchema = yup.object().shape({\r\n    email: yup.string().required(\"This field is required!\").email(\"Email is invalid!\"),\r\n    password: yup.string().required(\"This field is required!\")\r\n});\r\n\r\nexport const registerSchema = yup.object().shape({\r\n    email: yup.string().required(\"This field is required!\").email(\"Email is invalid!\"),\r\n    password: yup.string().required(\"This field is required!\"),\r\n    confirmPassword: yup.string().required(\"This field is required!\").oneOf([yup.ref('password'), null], 'Passwords must match')\r\n});","export const convertSongInfo = (songInfo) => {\r\n    const output = {\r\n        key: songInfo.key || songInfo.slug,\r\n        name: songInfo.name,\r\n        musicSrc: songInfo.musicSrc || songInfo.fileUrl,\r\n        cover: songInfo.cover || songInfo.thumbUrl,\r\n        singer: songInfo.singer || \"\",\r\n        lyric: songInfo.lyric || songInfo.lyrics\r\n    };\r\n    return output;\r\n};","import styled from \"styled-components\";\r\n\r\nimport { breakpoint } from \"src/Utilities\";\r\n\r\nexport const StyledAccountPage = styled.div`\r\n    padding: 20px 20px 0 20px;\r\n\r\n    .infoWrapper {\r\n        display: flex;\r\n        width: 100%;\r\n\r\n        ${breakpoint.breakTablet`\r\n            flex-direction: column;\r\n        `}\r\n    }\r\n\r\n    .generalInfoWrapper {\r\n        padding-left: 20px;\r\n        padding-top: 20px;\r\n        display: flex;\r\n\r\n        ${breakpoint.breakMobile`\r\n            flex-direction: column;\r\n            padding-left: 0px;\r\n            align-items: center;\r\n        `}\r\n\r\n        .userInfo {\r\n            padding: 0 10px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n\r\n            ${breakpoint.breakMobile`\r\n                margin-top: 10px;\r\n            `}\r\n            \r\n            & > p {\r\n                padding: 5px 0;\r\n            }\r\n\r\n            .username {\r\n                font-size: 20px;\r\n            }\r\n\r\n            .value {\r\n                display: block;\r\n                max-width: 270px;\r\n                text-overflow: ellipsis;\r\n                overflow: hidden;\r\n\r\n                ${breakpoint.breakIpadPro`\r\n                    max-width: 185px;\r\n                `}\r\n\r\n                ${breakpoint.breakTablet`\r\n                    max-width: unset;\r\n                `}\r\n\r\n                ${breakpoint.breakMobile`\r\n                    max-width: 275px;\r\n                `}\r\n            }\r\n        }\r\n    }\r\n\r\n    .update {\r\n        min-width: 550px;\r\n        margin-left: 50px;\r\n\r\n        ${breakpoint.breakIpadPro`\r\n            margin-left: 0;\r\n            min-width: 350px;\r\n        `}\r\n        \r\n        ${breakpoint.breakTablet`\r\n            margin-top: 30px;\r\n        `}\r\n\r\n        ${breakpoint.breakTablet`\r\n            min-width: 100%;\r\n        `}\r\n\r\n        .updateInfo {\r\n            margin-top: 10px;\r\n        }\r\n\r\n        .updateItem {\r\n            padding: 10px;\r\n\r\n            .labelAvatar {\r\n                display: inline-block;\r\n                padding-bottom: 10px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .MuiFormLabel-root {\r\n        color: #fff;\r\n    }\r\n\r\n    .MuiInputBase-root {\r\n        color: #fff;\r\n    }\r\n\r\n    .MuiOutlinedInput-notchedOutline {\r\n        border-color: #fff;\r\n    }\r\n\r\n    .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\r\n        border-color: #fff;\r\n    }\r\n\r\n    .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline {\r\n        border-color: #fff;\r\n    }\r\n\r\n    .MuiFormLabel-root.Mui-focused {\r\n        color: #fff;\r\n    }\r\n    \r\n    .MuiFormLabel-root.Mui-error {\r\n        color: #f44336;\r\n    }\r\n\r\n    .MuiOutlinedInput-root.Mui-error .MuiOutlinedInput-notchedOutline {\r\n        border-color: #f44336;\r\n    }\r\n\r\n    .MuiFormLabel-root.Mui-disabled {\r\n        color: #fff;\r\n    }\r\n\r\n    .MuiInputBase-root.Mui-disabled {\r\n        color: #fff;\r\n    }\r\n\r\n    .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline {\r\n        border-color: #fff;\r\n    }\r\n`;","export const sleep = (ms) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n    padding: 13px 20px;\r\n    border-radius: 6px;\r\n    width: 100%;\r\n    transition: 300ms;\r\n    font-size: 16px;\r\n    \r\n    &:hover {\r\n        background-color: ${p => p.theme.colors.secondary};\r\n    }\r\n`;\r\n\r\nexport const StyledUpdateButton = styled(StyledButton)`\r\n    margin-top: 20px;\r\n    border: 1px solid #fff;\r\n    background-color: ${p => p.disabled ? \"#ccc\" : \"transparent\"};\r\n\r\n    &:hover {\r\n        background-color: ${p => p.disabled ? \"#ccc\" : p.theme.colors.secondary};\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledFormControl = styled.div`\r\n    margin: 20px 0;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledBackground = styled.div`\r\n    background: rgb(2,0,36);\r\n    background: linear-gradient(32deg, rgba(2,0,36,1) 0%, rgba(121,9,73,1) 50%, rgba(0,212,255,1) 100%);\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n`;\r\n\r\nexport const StyledBackgroundLogin = styled.div`\r\n    background-image: url(\"images/backgrounds/background_login.jpg\");\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: fixed;\r\n    background-size: cover;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledFormModule = styled.div`\r\n    background-color: #fff;\r\n    padding: 10px;\r\n`;","import { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { PATH_HOME } from \"src/Routes\";\r\nimport { SideBarItemComponent } from \"src/Components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { playerSelector } from \"src/Redux\";\r\n\r\nexport const SideBarComponent = () => {\r\n    const itemModelTop = [\r\n        {\r\n            iconName: \"home\",\r\n            title: \"Home\",\r\n            link: PATH_HOME\r\n        },\r\n        {\r\n            iconName: \"musical-notes\",\r\n            title: \"Playlists\",\r\n            link: PATH_HOME\r\n        },\r\n        {\r\n            iconName: \"browsers\",\r\n            title: \"Libraries\",\r\n            link: PATH_HOME\r\n        },\r\n    ];\r\n\r\n    const itemModelBottom = [\r\n        {\r\n            iconName: \"person\",\r\n            title: \"Following\",\r\n            link: PATH_HOME\r\n        },\r\n    ];\r\n\r\n    const isPlaying = useSelector(playerSelector).isPlaying;\r\n\r\n    return (\r\n        <Container\r\n            initial={{\r\n                x: -1000\r\n            }}\r\n            animate={{\r\n                x: 0\r\n            }}\r\n            transition={{\r\n                duration: .7\r\n            }}\r\n            isPlaying={isPlaying}\r\n        >\r\n            <Link to={PATH_HOME} className=\"logo flexCenter\">\r\n                <img src=\"images/logos/logo.png\" alt=\"\" />\r\n                <span style={{ \"--i\": \"1s\" }} className=\"ringAnimate\"></span>\r\n                <span style={{ \"--i\": \"2s\" }} className=\"ringAnimate\"></span>\r\n                <span style={{ \"--i\": \"3s\" }} className=\"ringAnimate\"></span>\r\n            </Link>\r\n            <div className=\"listItem\">\r\n                {itemModelTop.map((item, index) => {\r\n                    return (\r\n                        <SideBarItemComponent key={index} data={item} />\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"listItem listItemBottom\">\r\n                {itemModelBottom.map((item, index) => {\r\n                    return (\r\n                        <SideBarItemComponent key={index} data={item} />\r\n                    );\r\n                })}\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled(motion.div)`\r\n    background-color: ${p => p.theme.colors.secondary};\r\n    box-shadow: 3px 0 10px rgba(0, 0, 0, .3);\r\n    min-height: 100vh;\r\n    position: sticky;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    .logo {\r\n        padding-top: 5px;\r\n        position: relative;\r\n\r\n        .ringAnimate {\r\n            position: absolute;\r\n            display: inline-block;\r\n            width: 40%;\r\n            height: 100%;\r\n            border-radius: 50%;\r\n            border: 1px solid ${p => p.theme.colors.gray_5};\r\n            transform: scale(0.7);\r\n            ${p => p.isPlaying ? \"animation: scale 3s infinite var(--i);\" : \"\"}\r\n            z-index: -1;\r\n        }\r\n\r\n        img {\r\n            width: 40%;\r\n        }\r\n    }\r\n\r\n    .listItem {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding-top: 30px;\r\n        padding-left: 15px;\r\n        padding-bottom: 10px;\r\n        border-bottom: 1px solid ${p => p.theme.colors.gray_3};\r\n\r\n        &.listItemBottom {\r\n            border-bottom: none;\r\n            padding-top: 10px;\r\n        }\r\n    }\r\n\r\n    @keyframes scale {\r\n        from {\r\n            transform: scale(0.9);\r\n            opacity: 1;\r\n        }\r\n\r\n        to {\r\n            transform: scale(1.5);\r\n            opacity: 0;\r\n        }\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { StyledButton, SearchResultBox, AvatarComponent } from \"src/Components\";\r\nimport { breakpoint, useWindowDimensions } from \"src/Utilities\";\r\nimport { authSelector } from \"src/Redux\";\r\nimport { PATH_ACCOUNT_SETTING } from \"src/Routes\";\r\n\r\nexport const HeaderComponent = ({\r\n    isBlur = false,\r\n    onClickLogin = () => {},\r\n    keySearch = \"\",\r\n    isSearching = false,\r\n    onChangeKeySearch = () => {},\r\n    searchResult,\r\n    isShowSearchResultBox = false,\r\n    onShowSearchResultBox = () => {},\r\n    onHiddenSearchResultBox = () => {},\r\n    isFocused = false,\r\n    onClickSearchAll,\r\n    onKeyUpInput = () => {},\r\n    onClickLogout = () => {}\r\n}) => {\r\n    const { width } = useWindowDimensions();\r\n    const userInfo = useSelector(authSelector).userInfo;\r\n\r\n    const MenuAccount = () => {\r\n        return (\r\n            <Menu>\r\n                <Link to={PATH_ACCOUNT_SETTING} className=\"item\">\r\n                    <span className=\"icon\">\r\n                        <ion-icon name=\"shield-checkmark-outline\"></ion-icon>\r\n                    </span>\r\n                    <span className=\"text\">\r\n                        Tài khoản\r\n                    </span>\r\n                </Link>\r\n                <div className=\"item\" onClick={onClickLogout}>\r\n                    <span className=\"icon\">\r\n                        <ion-icon name=\"log-out-outline\"></ion-icon>\r\n                    </span>\r\n                    <span className=\"text\">\r\n                        Đăng xuất\r\n                    </span>\r\n                </div>\r\n            </Menu>\r\n        );\r\n    };\r\n    return (\r\n        <Container \r\n            className=\"flexCenter\" \r\n            isBlur={isBlur}\r\n            isFocused={isFocused}\r\n            width={width}\r\n            initial={{\r\n                y: -1000\r\n            }}\r\n            animate={{\r\n                y: 0\r\n            }}\r\n            transition={{\r\n                duration: .7\r\n            }}\r\n        >\r\n            <div className=\"searchBox flexCenter\">\r\n                <span className=\"searchIcon\">\r\n                    <ion-icon name=\"search-outline\"></ion-icon>\r\n                </span>\r\n                <input \r\n                    type=\"text\" \r\n                    value={keySearch} \r\n                    onChange={onChangeKeySearch} \r\n                    onFocus={onShowSearchResultBox} \r\n                    onBlur={onHiddenSearchResultBox} \r\n                    onKeyUp={onKeyUpInput}\r\n                />\r\n                {isSearching && (\r\n                    <span className=\"spinner\">\r\n                        <ClipLoader size={16} color=\"#fff\" />\r\n                    </span>\r\n                )}\r\n                {isShowSearchResultBox && (\r\n                    <div className=\"searchResult\">\r\n                        <SearchResultBox keySearch={keySearch} searchResult={searchResult} onClickSearchAll={onClickSearchAll} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"menu flexCenter\">\r\n                <div className=\"loginBtn\">\r\n                    {userInfo ? (\r\n                        <>\r\n                            <AvatarComponent \r\n                                // width={50}\r\n                                avatarUrl={userInfo.avatarUrl}\r\n                            />\r\n                            <div className=\"menuAccount\">\r\n                                <MenuAccount />\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <StyledButton onClick={onClickLogin}>\r\n                            Đăng nhập\r\n                        </StyledButton>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Menu = styled.div`\r\n    background-color: ${p => p.theme.colors.secondary};\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n\r\n    .item {\r\n        display: flex;\r\n        width: 130px;\r\n        padding: 10px;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            background-color: ${p => p.theme.colors.main};\r\n        }\r\n\r\n        .icon {\r\n            margin-right: 10px;\r\n        }\r\n\r\n        .text {\r\n            display: inline-block;\r\n            /* width: 100px; */\r\n        }\r\n    }\r\n`;\r\n\r\nconst Container = styled(motion.div)`\r\n    height: 80px;\r\n    justify-content: space-between;\r\n    padding: 0 10px;\r\n    position: sticky;\r\n    top: 0;\r\n    right: 0;\r\n    transition: height 300ms;\r\n    z-index: 1;\r\n    ${({ isBlur, theme }) => isBlur ? `\r\n        backdrop-filter: blur(10px);\r\n        border-bottom: 1px solid ${theme.colors.gray_1};\r\n        box-shadow: 0 3px 7px rgba(0, 0, 0, .3);\r\n        height: 60px;\r\n    ` : \"\"}\r\n\r\n    /* ${breakpoint.breakMobile`\r\n        justify-content: center;\r\n    `} */\r\n    \r\n    .menu {\r\n        .uploadBtn {\r\n            ${breakpoint.breakMobile`\r\n                display: none;\r\n            `}\r\n        }\r\n\r\n        .loginBtn {\r\n            margin-left: 10px;\r\n            display: ${p => p.width < 744 && p.isFocused ? \"none\" : \"block\"};\r\n            position: relative;\r\n            margin-right: 20px;\r\n\r\n            ${breakpoint.breakMobile`\r\n                margin-right: 0px;\r\n            `}\r\n\r\n            &:hover {\r\n                .menuAccount {\r\n                    padding-top: 5px;\r\n                    display: block;\r\n                }\r\n            }\r\n\r\n            .menuAccount {\r\n                position: absolute;\r\n                top: 100%;\r\n                right: 0;\r\n                display: none;\r\n            }\r\n\r\n            button {\r\n                ${breakpoint.breakMobile`\r\n                    padding: 5px;\r\n                `}\r\n            }\r\n        }\r\n    }\r\n\r\n    .uploadBtn {\r\n        border-bottom: 1px solid transparent;\r\n        font-size: 16px;\r\n\r\n        &:hover {\r\n            border-bottom: 1px solid #fff;\r\n        }\r\n\r\n        .text {\r\n            margin-left: 5px;\r\n            margin-bottom: 2px;\r\n        }\r\n    }\r\n\r\n    .searchBox {\r\n        background-color: ${p => p.theme.colors.gray_1};\r\n        padding: 10px 20px;\r\n        border-radius: 100px;\r\n        margin-left: 30px;\r\n        min-width: 300px;\r\n        position: relative;\r\n\r\n        ${breakpoint.breakMobile`\r\n            padding: 10px 20px;\r\n            margin-left: 0;\r\n            min-width: unset;\r\n            flex: 1;\r\n        `}\r\n\r\n        input {\r\n            border: none;\r\n            padding: 0 5px;\r\n            flex: 1;\r\n        }\r\n\r\n        .searchIcon {\r\n            position: relative;\r\n            top: 2px;\r\n        }\r\n\r\n        .spinner {\r\n            position: absolute;\r\n            top: calc(50% + 2px);\r\n            right: 15px;\r\n            transform: translateY(-50%);\r\n        }\r\n\r\n        .searchResult {\r\n            position: absolute;\r\n            top: calc(100% + 5px);\r\n            left: 0;\r\n            width: 100%;\r\n        }\r\n    }\r\n`;","import { TextField } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const InputComponent = ({\r\n    label = \"\",\r\n    value = \"\",\r\n    type = \"text\",\r\n    error = \"\",\r\n    touched = false,\r\n    name = \"\",\r\n    onChange = () => {},\r\n    onBlur = () => {}\r\n}) => {\r\n\r\n    return (\r\n        <StyledTextField>\r\n            <TextField\r\n                label={label}\r\n                fullWidth\r\n                value={value}\r\n                type={type}\r\n                error={!!error && touched}\r\n                helperText={!!error && touched ? error : \"\"}\r\n                name={name}\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                autoComplete=\"\"\r\n            />\r\n        </StyledTextField>\r\n    );\r\n};\r\n\r\nconst StyledTextField = styled.div`\r\n    .MuiFormLabel-root {\r\n        color: #fff;\r\n    }\r\n\r\n    .MuiInputBase-root {\r\n        color: #fff;\r\n    }\r\n\r\n    .MuiOutlinedInput-notchedOutline {\r\n        border-color: #fff;\r\n    }\r\n\r\n    .MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\r\n        border-color: #fff;\r\n    }\r\n\r\n    .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline {\r\n        border-color: #fff;\r\n    }\r\n\r\n    .MuiFormLabel-root.Mui-focused {\r\n        color: #fff;\r\n    }\r\n    \r\n    .MuiFormLabel-root.Mui-error {\r\n        color: #f44336;\r\n    }\r\n\r\n    .MuiOutlinedInput-root.Mui-error .MuiOutlinedInput-notchedOutline {\r\n        border-color: #f44336;\r\n    }\r\n\r\n    .MuiFormLabel-root.Mui-disabled {\r\n        color: #fff;\r\n    }\r\n\r\n    .MuiInputBase-root.Mui-disabled {\r\n        color: #fff;\r\n    }\r\n\r\n    .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline {\r\n        border-color: #fff;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { StyledFormControl, InputComponent, StyledUpdateButton } from \"src/Components\";\r\n\r\n\r\nexport const FormLoginComponent = ({\r\n    values = {},\r\n    errors = {},\r\n    touched = {},\r\n    onChange = () => {},\r\n    onBlur = () => {},\r\n    onSubmit = () => {},\r\n    isSubmitting = false,\r\n}) => {\r\n    \r\n    return (\r\n        <Container onSubmit={onSubmit}>\r\n            <div className=\"heading\">\r\n                Login\r\n            </div>\r\n            <div className=\"formMain\">\r\n                <StyledFormControl>\r\n                    <InputComponent\r\n                        label=\"Email\"\r\n                        value={values.email}\r\n                        error={errors.email}\r\n                        touched={touched.email}\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                    />\r\n                </StyledFormControl>\r\n                <StyledFormControl>\r\n                    <InputComponent\r\n                        label=\"Password\"\r\n                        value={values.password}\r\n                        error={errors.password}\r\n                        touched={touched.password}\r\n                        name=\"password\"\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        type=\"password\"\r\n                    />\r\n                </StyledFormControl>\r\n            </div>\r\n            <div className=\"loginBtn\">\r\n                <StyledUpdateButton type=\"submit\" variant=\"contained\" disabled={isSubmitting}>Login</StyledUpdateButton>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled(motion.form)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 350px;\r\n    /* border: 1px solid ${p => p.theme.colors.gray_3}; */\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    min-width: 300px;\r\n\r\n    .formMain {\r\n        flex: 1;\r\n    }\r\n\r\n    .heading {\r\n        text-align: center;\r\n        font-weight: 800;\r\n        font-size: 23px;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .loginBtn {\r\n        border-top: 1px solid #fff;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { StyledFormControl, InputComponent, StyledUpdateButton } from \"src/Components\";\r\n\r\n\r\nexport const FormRegisterComponent = ({\r\n    values = {},\r\n    errors = {},\r\n    touched = {},\r\n    onChange = () => {},\r\n    onBlur = () => {},\r\n    onSubmit = () => {},\r\n    isSubmitting = false,\r\n}) => {\r\n    \r\n    return (\r\n        <Container onSubmit={onSubmit}>\r\n            <div className=\"heading\">\r\n                Register\r\n            </div>\r\n            <div className=\"formMain\">\r\n                <StyledFormControl>\r\n                    <InputComponent\r\n                        label=\"Email\"\r\n                        value={values.email}\r\n                        error={errors.email}\r\n                        touched={touched.email}\r\n                        name=\"email\"\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                    />\r\n                </StyledFormControl>\r\n                <StyledFormControl>\r\n                    <InputComponent\r\n                        label=\"Password\"\r\n                        value={values.password}\r\n                        error={errors.password}\r\n                        touched={touched.password}\r\n                        name=\"password\"\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        type=\"password\"\r\n                    />\r\n                </StyledFormControl>\r\n                <StyledFormControl>\r\n                    <InputComponent\r\n                        label=\"Confirm password\"\r\n                        value={values.confirmPassword}\r\n                        error={errors.confirmPassword}\r\n                        touched={touched.confirmPassword}\r\n                        name=\"confirmPassword\"\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        type=\"password\"\r\n                    />\r\n                </StyledFormControl>\r\n            </div>\r\n            <div className=\"loginBtn\">\r\n                <StyledUpdateButton variant=\"contained\" disabled={isSubmitting} type=\"submit\">Register</StyledUpdateButton>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled(motion.form)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 350px;\r\n    /* border: 1px solid ${p => p.theme.colors.gray_3}; */\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    min-width: 300px;\r\n\r\n    .formMain {\r\n        flex: 1;\r\n    }\r\n\r\n    .heading {\r\n        text-align: center;\r\n        font-weight: 800;\r\n        font-size: 23px;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .loginBtn {\r\n        border-top: 1px solid #fff;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\n\r\nexport const LoadingOverLay = () => {\r\n    return (\r\n        <Container className=\"flexCenter\">\r\n            <ScaleLoader color=\"#36D7B7\" />\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, .3);\r\n    z-index: 100000;\r\n`;","export const FORM_LOGIN = \"FORM_LOGIN\"\r\nexport const FORM_REGISTER = \"FORM_REGISTER\"","import styled from \"styled-components\";\r\n\r\nexport const SearchResultBox = ({\r\n    searchResult = {\r\n        songs: [],\r\n        playlists: []\r\n    },\r\n    keySearch = \"\",\r\n    onClickSearchAll = () => {}\r\n}) => {\r\n    return (\r\n        <Container>\r\n            {!!searchResult.songs.length && <p className=\"heading\">Bài hát:</p>}\r\n            {!!searchResult.songs.length && searchResult.songs.map(item => {\r\n                return (\r\n                    <div key={item._id} className=\"searchResultItem flexCenter\">\r\n                        <div className=\"thumb\">\r\n                            <img src={item.thumbUrl} alt={item.slug} />\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <p className=\"name\">{item.name}</p>\r\n                            <p className=\"singer\">{item.singer}</p>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n            <div className=\"showAll searchResultItem\" onClick={onClickSearchAll}>\r\n                {!!searchResult.songs.length || !!searchResult.playlists.length ? `Hiển thị tất cả với: ${keySearch}` : `Không tìm thấy bài hát nào với: ${keySearch}`}\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    background-color: ${p => p.theme.colors.secondary};\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n\r\n    .heading {\r\n        margin: 10px 0 5px 10px;\r\n    }\r\n\r\n    .searchResultItem {\r\n        padding: 10px 20px;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            background-color: ${p => p.theme.colors.main};\r\n        }\r\n\r\n        &.showAll {\r\n            border-top: 1px solid ${p => p.theme.colors.black};\r\n        }\r\n\r\n        .info {\r\n            flex: 1;\r\n\r\n            .singer {\r\n                font-size: 13px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .thumb {\r\n        margin-right: 5px;\r\n\r\n        img {\r\n            width: 40px;\r\n            border-radius: 50%;\r\n        }\r\n    }\r\n`;","import { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { playerSelector } from \"src/Redux\";\r\nimport { useWindowDimensions } from \"src/Utilities\";\r\n\r\nexport const SongItemComponent = ({\r\n    data = null,\r\n    onClickPlayBtn = () => {},\r\n    onClickAddBtn = () => {}\r\n}) => {\r\n    const playerRedux = useSelector(playerSelector);\r\n    const listPlaying = playerRedux.playlist;\r\n    const currentSong = playerRedux.currentSong || {};\r\n    const isExisted = listPlaying.some(song => song.musicSrc === data.musicSrc);\r\n    const isPlaying = data.musicSrc === currentSong.musicSrc;\r\n    const { width } = useWindowDimensions();\r\n    // console.log(data.musicSrc, currentSong.musicSrc);\r\n    return (\r\n        <Container>\r\n            {width >= 744 ? (\r\n                <div className=\"thumb\" title={data.name}>\r\n                    <img src={data.cover} alt={data.name} />\r\n                    <div className=\"groupBtn flexCenter\">\r\n                        <button className=\"playBtn\" onClick={onClickPlayBtn}>\r\n                            <ion-icon name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"}></ion-icon>\r\n                        </button>\r\n                        {!isExisted && (\r\n                            <button className=\"addBtn\" onClick={onClickAddBtn}>\r\n                                <ion-icon name=\"add-circle\"></ion-icon>\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"wrapperMobile\">\r\n                    <div className=\"thumb\" onClick={onClickPlayBtn}>\r\n                        <img src={data.cover} alt={data.name} />\r\n                    </div>\r\n                    <div className=\"info\" onClick={onClickPlayBtn}>\r\n                        <h3 className=\"songName\">{data.name}</h3>\r\n                        <p className=\"singer\">{data.singer}</p>\r\n                    </div>\r\n                    <div className=\"add flexCenter\">\r\n                        {!isExisted && (\r\n                            <button className=\"addBtn\" onClick={onClickAddBtn}>\r\n                                <ion-icon name=\"add-circle\"></ion-icon>\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    padding: 10px;\r\n\r\n    .thumb {\r\n        cursor: pointer;\r\n        position: relative;\r\n\r\n        .groupBtn {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            opacity: 0;\r\n            background-color: rgba(0, 0, 0, .5);\r\n            transition: 300ms;\r\n\r\n            &:hover {\r\n                opacity: 1;\r\n            }\r\n            \r\n            ion-icon {\r\n                font-size: 40px;\r\n\r\n                @media (max-width: 1111px) {\r\n                    font-size: 50px;\r\n                }\r\n            }\r\n        }\r\n\r\n        img {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .wrapperMobile {\r\n        display: flex;\r\n        border-bottom: 1px solid ${p => p.theme.colors.gray_3};\r\n        padding-bottom: 10px;\r\n\r\n        .thumb {\r\n            width: 50px;\r\n            margin-right: 10px;\r\n\r\n            img {\r\n                width: 100%;\r\n            }\r\n        }\r\n\r\n        .info {\r\n            flex: 1;\r\n\r\n            .songName {\r\n                max-width: 185px;\r\n            }\r\n        }\r\n\r\n        .add {\r\n            .addBtn {\r\n                font-size: 20px;\r\n            }\r\n        }\r\n    }\r\n`;","import { motion } from \"framer-motion\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SideBarItemComponent = ({\r\n    data = null\r\n}) => {\r\n    return (\r\n        <Container\r\n            whileHover={{\r\n                scale: 1.2,\r\n                x: 25,\r\n                transition: {\r\n                    duration: .4,\r\n                    type: \"spring\"\r\n                }\r\n            }}\r\n        >\r\n            <NavLink to={data.link} activeClassName=\"isActived\" className=\"link flexCenter\" exact>\r\n                <span className=\"icon\">\r\n                    <ion-icon name={data.iconName}></ion-icon>\r\n                </span>\r\n                <p className=\"text\">\r\n                    {data.title}\r\n                </p>\r\n            </NavLink>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled(motion.div)`\r\n    font-size: 20px;\r\n\r\n    .icon {\r\n        margin-right: 10px;\r\n    }\r\n\r\n    .link {\r\n        justify-content: flex-start;\r\n        padding: 10px 0;\r\n    }\r\n`;","import { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { Formik } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { FormLoginComponent } from \"src/Components\";\r\nimport { login } from \"src/Redux\";\r\nimport { loginSchema } from \"src/Utilities\";\r\n\r\nexport const LoginModule = ({ onHiddenLogin = () => {} }) => {\r\n    const dispatch = useDispatch();\r\n    const initialValuesLogin = {\r\n        email: \"buiduclong0511@gmail.com\",\r\n        password: \"123@abc\"\r\n    };\r\n    return (\r\n        <Formik\r\n            initialValues={initialValuesLogin}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n                try {\r\n                    const res = await dispatch(login(values));\r\n                    unwrapResult(res);\r\n                    if (res) {\r\n                        onHiddenLogin();\r\n                    }\r\n                } catch (err) {\r\n                    setSubmitting(false);\r\n                    let errorMessage = \"\";\r\n                    if (err.response.status === 401) {\r\n                        errorMessage = \"Sai tài khoản hoặc mật khẩu!\";\r\n                    } else {\r\n                        errorMessage = \"Lỗi đăng nhập!\";\r\n                    }\r\n                    toast.error(errorMessage);\r\n                }\r\n            }}\r\n            validationSchema={loginSchema}\r\n        >\r\n            {(props) => {\r\n                const { values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting } = props;\r\n                return (\r\n                    <FormLoginComponent\r\n                        values={values}\r\n                        errors={errors}\r\n                        touched={touched}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        onSubmit={handleSubmit}\r\n                        isSubmitting={isSubmitting}\r\n                    />\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};","import { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { Formik } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { FormRegisterComponent } from \"src/Components\";\r\nimport { register } from \"src/Redux\";\r\nimport { registerSchema } from \"src/Utilities\";\r\n\r\nexport const RegisterModule = ({ onHiddenLogin = () => {} }) => {\r\n    const dispatch = useDispatch();\r\n    const initialValues = {\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    };\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n                try {\r\n                    const { confirmPassword, ...body } = values;\r\n                    const res = await dispatch(register(body));\r\n                    unwrapResult(res);\r\n                    if (res) {\r\n                        onHiddenLogin();\r\n                    }\r\n                } catch (err) {\r\n                    setSubmitting(false);\r\n                    let errorMessage = \"\";\r\n                    if (err.response.status === 409) {\r\n                        errorMessage = \"Email đã được đăng ký!\";\r\n                    } else {\r\n                        errorMessage = \"Lỗi đăng ký!\";\r\n                    }\r\n                    toast.error(errorMessage);\r\n                }\r\n            }}\r\n            validationSchema={registerSchema}\r\n        >\r\n            {(props) => {\r\n                const { values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting } = props;\r\n                return (\r\n                    <FormRegisterComponent\r\n                        values={values}\r\n                        errors={errors}\r\n                        touched={touched}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        onSubmit={handleSubmit}\r\n                        isSubmitting={isSubmitting}\r\n                    />\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};","import { motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { LoadingOverLay } from \"src/Components\";\r\nimport { FORM_LOGIN, FORM_REGISTER } from \"src/Constant\";\r\nimport { LoginModule, RegisterModule } from \"src/Modules\";\r\nimport { authSelector, closePlayer } from \"src/Redux\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LoginModalComponent = ({ onHiddenLogin = () => {} }) => {\r\n    const [form, setForm] = useState(FORM_LOGIN);\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector(authSelector).isLoading;\r\n    const handleSwitchForm = () => {\r\n        if (form === FORM_LOGIN) {\r\n            setForm(FORM_REGISTER);\r\n        } else {\r\n            setForm(FORM_LOGIN);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(closePlayer());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return (\r\n        <Container className=\"flexCenter\">\r\n            <div className=\"overlay\" onClick={onHiddenLogin}></div>\r\n            <motion.div \r\n                className=\"formWrapper\" \r\n                initial={{\r\n                    x: 1000\r\n                }}\r\n                animate={{\r\n                    x: 0\r\n                }}\r\n            >\r\n                <button className=\"closeButton\" onClick={onHiddenLogin}>&times;</button>\r\n                {form === FORM_LOGIN ? (\r\n                    <>\r\n                        <LoginModule onHiddenLogin={onHiddenLogin} />\r\n                        <p className=\"switch\">Bạn chưa có tài khoản? <span onClick={handleSwitchForm}>Đăng ký</span></p>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <RegisterModule onHiddenLogin={onHiddenLogin} />\r\n                    <p className=\"switch\">Bạn đã có tài khoản? <span onClick={handleSwitchForm}>Đăng nhập</span></p>\r\n                    </>\r\n                )}\r\n            </motion.div>\r\n            {isLoading && <LoadingOverLay />}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    min-height: 100vh;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 100;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: rgba(0, 0, 0, .3);\r\n\r\n    .overlay {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: 1;\r\n    }\r\n    \r\n    .formWrapper {\r\n        background-color: ${p => p.theme.colors.main};\r\n        border-radius: 8px;\r\n        padding: 20px;\r\n        z-index: 2;\r\n        position: relative;\r\n\r\n        .closeButton {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            padding: 10px;\r\n            font-size: 30px;\r\n        }\r\n    }\r\n\r\n    .switch {\r\n        padding-top: 10px;\r\n        text-align: center;\r\n\r\n        span {\r\n            transition: 300ms;\r\n            cursor: pointer;\r\n\r\n            &:hover {\r\n                color: ${p => p.theme.colors.orange};\r\n            }\r\n        }\r\n    }\r\n`;","import {\r\n    Home,\r\n    SearchResult,\r\n    AccountSetting\r\n} from \"src/Pages\";\r\n\r\nexport const PATH_HOME = \"/\";\r\nexport const PATH_SEARCH_RESULT = \"/search\";\r\nexport const PATH_ACCOUNT_SETTING = \"/account\";\r\n\r\nexport const router = [\r\n    { path: PATH_HOME, component: Home },\r\n    { path: PATH_SEARCH_RESULT + \"/:keySearch\", component: SearchResult },\r\n    { path: PATH_ACCOUNT_SETTING, component: AccountSetting },\r\n]","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { breakpoint } from \"src/Utilities\";\r\nimport { PATH_HOME } from \"src/Routes\";\r\n\r\nexport const FooterComponent = () => {\r\n    const itemsModel = [\r\n        {\r\n            iconName: \"home\",\r\n            title: \"Home\",\r\n            link: PATH_HOME\r\n        },\r\n        {\r\n            iconName: \"browsers\",\r\n            title: \"Libraries\",\r\n            link: PATH_HOME\r\n        },\r\n        {\r\n            iconName: \"person\",\r\n            title: \"Following\",\r\n            link: PATH_HOME\r\n        },\r\n        {\r\n            iconName: \"cloud-upload\",\r\n            title: \"Upload\",\r\n            link: PATH_HOME\r\n        },\r\n    ];\r\n    return (\r\n        <Container className=\"flexCenter\">\r\n            {itemsModel.map((item, index) => {\r\n                return (\r\n                    <Item key={index} to={item.link} activeClassName=\"active\" exact>\r\n                        <ion-icon name={item.iconName}></ion-icon>\r\n                        <span className=\"text\">{item.title}</span>\r\n                    </Item>\r\n                );\r\n            })}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    display: none;\r\n    background-color: ${p => p.theme.colors.main};\r\n    \r\n    ${breakpoint.breakMobile`\r\n        display: flex;\r\n    `}\r\n`;\r\n\r\nconst Item = styled(NavLink)`\r\n    padding: 15px 0;\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    ion-icon {\r\n        font-size: 20px;\r\n    }\r\n    \r\n    .text {\r\n        margin-top: 7px;\r\n    }\r\n`;","import { Column, Grid, Row } from \"@mycv/mycv-grid\";\r\nimport styled from \"styled-components\";\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { AddMenuModule } from \"src/Modules\";\r\nimport { playerSelector } from \"src/Redux\";\r\nimport { motion } from \"framer-motion\";\r\nimport { breakpoint } from \"src/Utilities\";\r\n\r\nexport const SearchResultSongItem = ({\r\n    data = {},\r\n    onClickPlay = () => {},\r\n    onShowMenu = () => {},\r\n    anchorEl = null,\r\n    id = \"\",\r\n    open = false\r\n}) => {\r\n    const currentSong = useSelector(playerSelector).currentSong || {};\r\n    const isPlaying = data.fileUrl === currentSong.musicSrc;\r\n    const animate = {\r\n        scale: 1.3\r\n    };\r\n    return (\r\n        <SongContainer>\r\n            <Grid>\r\n                <Row>\r\n                    <Column\r\n                        sizeDesktop={6}\r\n                        sizeTablet={7}\r\n                        size={12}\r\n                    >\r\n                        <div style={{display: 'flex'}}>\r\n                            <div className=\"thumb\">\r\n                                <img src={data.thumbUrl} alt={data.name} />\r\n                            </div>\r\n                            <div className=\"info\">\r\n                                <h3 className=\"songName\">{data.name}</h3>\r\n                                <p className=\"singer\">Ca sĩ: {data.singer}</p>\r\n                                <p className=\"author\">Sáng tác: {data.author}</p>\r\n                                <div className=\"listControlsMobile listControls\">\r\n                                    <motion.span \r\n                                        className=\"icon playIcon\" \r\n                                        onClick={onClickPlay}\r\n                                        whileHover={animate}\r\n                                    >\r\n                                        <ion-icon name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"}></ion-icon>\r\n                                    </motion.span>\r\n                                    <motion.span \r\n                                        className=\"icon addIcon\" \r\n                                        onClick={onShowMenu}\r\n                                        whileHover={animate}\r\n                                    >\r\n                                        <ion-icon id={id.toString()} name=\"add-circle-outline\"></ion-icon>\r\n                                        <Popper \r\n                                            id={id.toString()} \r\n                                            open={open} \r\n                                            anchorEl={anchorEl}\r\n                                            transition={true}\r\n                                        >\r\n                                            <AddMenuModule data={data} />\r\n                                        </Popper>\r\n                                    </motion.span>\r\n                                    <motion.span \r\n                                        className=\"icon heartIcon\"\r\n                                        whileHover={animate}\r\n                                    >\r\n                                        <ion-icon name=\"heart-outline\"></ion-icon>\r\n                                    </motion.span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Column>\r\n                    <Column\r\n                        sizeDesktop={3}\r\n                        sizeTablet={2}\r\n                        size={0}\r\n                    >\r\n                        <div className=\"listControls\">\r\n                            <motion.span \r\n                                className=\"icon playIcon\" \r\n                                onClick={onClickPlay}\r\n                                whileHover={animate}\r\n                            >\r\n                                <ion-icon name={isPlaying ? \"pause-circle-outline\" : \"play-circle-outline\"}></ion-icon>\r\n                            </motion.span>\r\n                            <motion.span \r\n                                className=\"icon addIcon\" \r\n                                onClick={onShowMenu}\r\n                                whileHover={animate}\r\n                            >\r\n                                <ion-icon id={id.toString()} name=\"add-circle-outline\"></ion-icon>\r\n                                <Popper \r\n                                    id={id.toString()} \r\n                                    open={open} \r\n                                    anchorEl={anchorEl}\r\n                                    transition={true}\r\n                                >\r\n                                    <AddMenuModule data={data} />\r\n                                </Popper>\r\n                            </motion.span>\r\n                            <motion.span \r\n                                className=\"icon heartIcon\"\r\n                                whileHover={animate}\r\n                            >\r\n                                <ion-icon name=\"heart-outline\"></ion-icon>\r\n                            </motion.span>\r\n                        </div>\r\n                    </Column>\r\n                    <Column\r\n                        sizeDesktop={3}\r\n                        sizeTablet={3}\r\n                        size={0}\r\n                    >\r\n                        <div className=\"subInfo flexCenter\">\r\n                            {data.listVisitorIds.length} lượt nghe\r\n                        </div>\r\n                    </Column>\r\n                </Row>\r\n            </Grid>\r\n        </SongContainer>\r\n    );\r\n};\r\n\r\nconst SongContainer = styled.div`\r\n    display: flex;\r\n    padding: 10px 0; \r\n\r\n    .thumb {\r\n        width: 100px;\r\n        margin-right: 10px;\r\n\r\n        img {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .listControls {\r\n        padding-top: 10px;\r\n\r\n        .icon {\r\n            margin: 0 5px;\r\n            cursor: pointer;\r\n            display: inline-block;\r\n\r\n            ion-icon {\r\n                font-size: 23px;\r\n            }\r\n        }\r\n\r\n        .addIcon {\r\n            position: relative;\r\n\r\n            .addMenu {\r\n                position: absolute;\r\n                top: 100%;\r\n                left: 50%;\r\n                transform: translateX(-50%);\r\n            }\r\n        }\r\n    }\r\n\r\n    .listControlsMobile {\r\n        display: none;\r\n\r\n        ${breakpoint.breakMobile`\r\n            display: block;\r\n        `}\r\n    }\r\n`;","import { breakpoint } from \"src/Utilities\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const AddMenuComponent = ({\r\n    onAddToCurrent = () => {},\r\n    onShowMenu = () => {}\r\n}) => {\r\n    return (\r\n        <Container>\r\n            <p className=\"item\" onClick={onAddToCurrent}>Thêm vào danh sách phát</p>\r\n            <p className=\"item\" onClick={onShowMenu}>Thêm vào playlist</p>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    background-color: ${p => p.theme.colors.secondary};\r\n    width: 200px;\r\n    z-index: 3;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 3px 5px 8px rgba(0, 0, 0, .3), 3px 5px 10px rgba(0, 0, 0, .3);\r\n\r\n    .item {\r\n        font-size: 13px;\r\n        padding: 10px 20px;\r\n        cursor: pointer;\r\n\r\n        ${breakpoint.breakMobile`\r\n            font-size: 15px;\r\n            padding: 10px;\r\n        `}\r\n\r\n        &:hover {\r\n            background-color: ${p => p.theme.colors.main};\r\n        }\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const AvatarComponent = ({\r\n    width = 40,\r\n    avatarUrl = null\r\n}) => {\r\n    return (\r\n        <Container width={width} avatarUrl={avatarUrl}>\r\n            {avatarUrl ? (\r\n                <></>\r\n            ) : (\r\n                <div className=\"emptyAvatar\">\r\n                    <ion-icon name=\"person-circle\"></ion-icon>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: ${p => p.width + \"px\"};\r\n    height: ${p => p.width + \"px\"};\r\n    /* background-color: #fff; */\r\n    background-image: url(${p => p.avatarUrl ? p.avatarUrl : \"\"});\r\n    background-size: cover;\r\n    background-position: center;\r\n    border-radius: 50%;\r\n    border: ${p => p.avatarUrl ? `1px solid ${p.theme.colors.gray_1}` : \"unset\"};\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    .emptyAvatar {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n\r\n        ion-icon {\r\n            font-size: ${p => p.width + \"px\"};\r\n        }\r\n    }\r\n`;","import ScaleLoader from \"react-spinners/ScaleLoader\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const LoadingComponent = ({\r\n    color = \"#36D7B7\",\r\n    width = 4,\r\n    height = 35,\r\n    margin = 20\r\n}) => {\r\n    return (\r\n        <Container\r\n            margin={margin}\r\n            className=\"flexCenter\"\r\n        >\r\n            <ScaleLoader color={color} width={width} height={height} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    margin: ${p => p.margin + 'px'};\r\n`;","import ReactJkMusicPlayer from \"react-jinke-music-player\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-jinke-music-player/assets/index.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRef, useEffect } from \"react\";\r\n\r\nimport { Layout } from \"src/Layout\";\r\nimport { addPlayedSong, authSelector, formLoginSelector, hiddenFormLogin, pause, play, playerSelector, replacePlaylist, updateCurrentSong, updateHistory } from \"src/Redux\";\r\nimport { convertSongInfo } from \"src/Utilities\";\r\nimport { songApi } from \"src/Api\";\r\nimport { LoginModalComponent } from \"./Components/LoginModalComponent\";\r\nimport { PATH_ACCOUNT_SETTING, PATH_HOME } from \"./Routes\";\r\n\r\n\r\nexport const App = () => {\r\n    const playerRedux = useSelector(playerSelector);\r\n    const listPlaying = playerRedux.playlist;\r\n    const isPlaying = playerRedux.isPlaying;\r\n    const listPlayedSongs = playerRedux.listPlayedSongs;\r\n    const userInfo = useSelector(authSelector).userInfo;\r\n    const isShowFormLogin = useSelector(formLoginSelector).isShowFormLogin;\r\n    const audioRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const volumeRef = useRef(null);\r\n    \r\n    const getAudioRef = (ref) => {\r\n        audioRef.current = ref;\r\n    };\r\n\r\n    const handlePlaylistChange = (currentPlayId, audioLists, audioInfo) => {\r\n        dispatch(replacePlaylist(audioLists));\r\n    };\r\n\r\n    const handleAudioPlay = (audioInfo) => {\r\n        if (!volumeRef.current) {\r\n            audioRef.current.volume = 0.99;\r\n            volumeRef.current = audioRef.current.volume;\r\n        }\r\n        const songInfo = convertSongInfo(audioInfo);\r\n        dispatch(updateHistory(songInfo));\r\n        dispatch(updateCurrentSong(songInfo));\r\n        dispatch(play());\r\n    };\r\n\r\n    const handleAudioProgress = (audioInfo) => {\r\n        const progress = 100 / audioInfo.duration * audioInfo.currentTime;\r\n        if (progress >= 50) {\r\n            const isPlayed = listPlayedSongs.some(slug => slug === audioInfo.key);\r\n            if (!isPlayed) {\r\n                songApi.incrementView(audioInfo.key)\r\n                .then(console.log)\r\n                .catch(console.log)\r\n                .finally(() => {\r\n                    dispatch(addPlayedSong(audioInfo.key));\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAudioPause = () => {\r\n        dispatch(pause());\r\n    };\r\n    \r\n    const handleHiddenLogin = () => {\r\n        dispatch(hiddenFormLogin());\r\n    };\r\n\r\n    useEffect(() => {\r\n        const isAuthPage = window.location.pathname === PATH_ACCOUNT_SETTING;\r\n        if (!userInfo && isAuthPage) {\r\n            window.location.assign(PATH_HOME);\r\n        }\r\n    }, [userInfo]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/* <Layout /> */}\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                draggable\r\n            />\r\n            <ReactJkMusicPlayer \r\n                quietUpdate \r\n                defaultPosition={{ right: 100, top: 100 }} \r\n                audioLists={listPlaying} \r\n                showDownload={false}\r\n                glassBg\r\n                mode=\"full\"\r\n                autoPlay={isPlaying}\r\n                getAudioInstance={getAudioRef}\r\n                clearPriorAudioLists\r\n                showThemeSwitch={false}\r\n                theme={\"dark\"}\r\n                onAudioListsChange={handlePlaylistChange}\r\n                onAudioPlay={handleAudioPlay}\r\n                onAudioProgress={handleAudioProgress}\r\n                onAudioPause={handleAudioPause}\r\n            />\r\n            {isShowFormLogin && (\r\n                <LoginModalComponent\r\n                    onHiddenLogin={handleHiddenLogin}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { App } from \"src/App\";\nimport './index.css';\nimport \"./grid.css\";\nimport reportWebVitals from './reportWebVitals';\nimport store, { persistor } from 'src/Redux';\nimport { theme } from 'src/Utilities';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </PersistGate>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}